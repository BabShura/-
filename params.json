{"name":"RiotApi.Net","tagline":"Riot Games League of Legends Api for .NET framework written in C#.","body":"<img src=\"http://i58.tinypic.com/qplz85.jpg\" border=\"0\" alt=\"Image and video hosting by TinyPic\">\r\n# RiotApi.NET [![NuGet Version](https://img.shields.io/badge/nuget-v1.0.2-green.svg)](https://www.nuget.org/packages/RiotApi.NET/)\r\nThis is a .net Api for Riot Games League of Legends written in C#. The goal of this project is to provide a higher \r\nlevel of interaction with the Riot's API Rest service, json responses are deserialized to objects and all methods of the\r\nservice are called via an Interface with all supported methods as documented by Riot.\r\n\r\nIn other words this project is a C# wrapper client that can be used within any kind of .net application or any other application using .net mono framework.\r\n\r\n#Install\r\nThe easiest way to install this api to your project is using NuGet\r\n\r\nTo install RiotApi.NET, run the following command in the Package Manager Console\r\n```\r\nPM> Install-Package RiotApi.NET\r\n```\r\n\r\nOfcourse you can always download the source code and use it in your project as you like.\r\n\r\n#How to use\r\nThe usage of the RiotApi.Net is a piece of cake! In less than three lines of code you can retrieve any data\r\nfrom Riot's services. \r\nFor instance you can fetch all free to play champions and print them to screen as you can see in the following example.\r\n\r\n## Example using Api Loader (recommended way)\r\n\r\nFirst import the appropriate libraries\r\n```cs\r\nusing RiotApi.Net.RestClient;\r\nusing RiotApi.Net.RestClient.Configuration;\r\n```\r\n\r\nThen create an http Riot client and make a call to champions API\r\n```cs\r\nvar riotClient = RiotApiLoader.CreateHttpClient(\"your api key here\");\r\n//retrieve all current free to play champions\r\nvar championList = riotClient.Champion.RetrieveAllChampions(RiotApiConfig.Regions.NA, freeToPlay: true);\r\n//print the number of free to play champions\r\nConsole.WriteLine($\"There are {championList.Champions.Count()} free to play champions to play with!\");\r\n```\r\n\r\n```\r\nresponse => There are 17 free to play champions to play with!\r\n```\r\n\r\n## Example using dependency injection within your application kernel\r\nThis is the advanced way using your own ninject modules (RiotHttpClientModule in our example)\r\n```cs\r\n//load a Riot Http module with an Api key into your kernel of your app\r\nIKernel kernel = new StandardKernel(new RiotHttpClientModule(\"your api key here\"));\r\n//get back the riot client from your application kernel using ninject\r\nvar riotClient = kernel.Get<RiotHttpClient>();\r\n//retrieve all current free to play champions\r\nvar championList = riotClient.Champion.RetrieveAllChampions(RiotApiConfig.Regions.NA, freeToPlay: true);\r\n//print the number of free to play champions\r\nConsole.WriteLine($\"There are {championList.Champions.Count()} free to play champions to play with!\");\r\n```\r\n\r\n```\r\nresponse => There are 17 free to play champions to play with!\r\n```\r\n\r\nDownload the full api documentation reference [here (chm format)] (https://github.com/sdesyllas/RiotApi.NET/blob/master/Documentation/Help/Documentation.chm?raw=true)\r\n\r\nThe goal of this project is to provide .net application developers with a high level tool for Riot games' API \r\nto use in their apps. I hope you will like it! Please feel free to contribute.\r\n\r\n# ASP.NET MVC User Interface \r\n> (WORK IN PROGRESS)\r\n\r\n# Third party libraries used\r\n* [Newtonsoft.Json](http://www.newtonsoft.com/json)\r\n* [Ninject](http://www.ninject.org/index.html)\r\n* [NLog](http://nlog-project.org/)\r\n* [NUnit](http://www.nunit.org/)\r\n* [moq](https://github.com/Moq/moq4)\r\n\r\n\r\n<img src=\"http://rdr.zazzle.com/img/imt-prd/isz-s/pd-217929838958860376/tl-ninject_akimbo_sticker.jpg\" alt=\"poweredby-ninject\"/>\r\n","google":"UA-2511207-9","note":"Don't delete this file! It's used internally to help with page regeneration."}