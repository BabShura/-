{"name":"RiotApi.Net","tagline":"Riot Games League of Legends Api for .NET framework written in C#.","body":"<img src=\"http://i58.tinypic.com/qplz85.jpg\" border=\"0\" alt=\"Image and video hosting by TinyPic\">\r\n# RiotApi.NET [![NuGet](https://img.shields.io/nuget/v/RiotApi.NET.svg)](https://www.nuget.org/packages/RiotApi.NET/) [![Build status](https://ci.appveyor.com/api/projects/status/ij46s81pk4cjbgmr?svg=true)](https://ci.appveyor.com/project/sdesyllas/riotapi-net) [![Stories in Ready](https://badge.waffle.io/sdesyllas/RiotApi.NET.svg?label=ready&title=Ready)](http://waffle.io/sdesyllas/RiotApi.NET)\r\n\r\nThis is a .net Api for Riot Games League of Legends written in C#. The goal of this project is to provide a higher \r\nlevel of interaction with the Riot's API Rest service, json responses are deserialized to objects and all methods of the\r\nservice are called via an Interface with all supported methods as documented by Riot.\r\n\r\nIn other words this project is a C# wrapper client that can be used within any kind of .net application or any other application using .net mono framework.\r\n\r\n#Install\r\nThe easiest way to install this api to your project is using [NuGet](https://www.nuget.org/packages/RiotApi.NET/)\r\n\r\nTo install RiotApi.NET, run the following command in the Package Manager Console\r\n```\r\nPM> Install-Package RiotApi.NET\r\n```\r\n\r\nOfcourse you can always download the source code and use it in your project as you like.\r\n\r\n#How to use\r\nThe usage of the RiotApi.Net is a piece of cake! In less than three lines of code you can retrieve any data\r\nfrom Riot's services. \r\nFor instance you can fetch all free to play champions and print them to screen as you can see in the following example.\r\n\r\n## Examples\r\n\r\n### Example 1\r\nGet free to play champions\r\n\r\nFirst import the appropriate libraries\r\n```cs\r\nusing RiotApi.Net.RestClient;\r\nusing RiotApi.Net.RestClient.Configuration;\r\n```\r\n\r\nThen create an http Riot client and make a call to champions API\r\n```cs\r\nIRiotClient riotClient = new RiotClient(\"your api key here\");\r\n//retrieve all current free to play champions\r\nvar championList = riotClient.Champion.RetrieveAllChampions(RiotApiConfig.Regions.NA, freeToPlay: true);\r\n//print the number of free to play champions\r\nConsole.WriteLine($\"There are {championList.Champions.Count()} free to play champions to play with!\");\r\n```\r\n\r\n```\r\nresponse => There are 17 free to play champions to play with!\r\n```\r\n\r\n### Example 2\r\nGet two summoners and compare their levels\r\n```cs\r\nIRiotClient riotClient = new RiotClient(\"your api key here\");\r\n//retrieve xeyanord and fnatictop summoners with one call\r\nvar summoners = riotClient.Summoner.GetSummonersByName(RiotApiConfig.Regions.EUNE, \"xeyanord\", \"fnatictop\");\r\nvar xeyanord = summoners[\"xeyanord\"];\r\nvar fnatictop = summoners[\"fnatictop\"];\r\n//print the following statement about the two summoners\r\nConsole.WriteLine($\"{fnatictop.Name} is level {fnatictop.SummonerLevel} and {xeyanord.Name} is {xeyanord.SummonerLevel}, its because {xeyanord.Name} is a slacker!\");\r\n```\r\n\r\n```\r\nresponse => Fnatic Top is level 30 and Xeyanord is 15, its because Xeyanord is a slacker!\r\n```\r\n\r\n### Example 3\r\nGet top 5 Challenger Tier EUNE leaderboard for Ranked Solo 5x5\r\n```cs\r\nIRiotClient riotClient = new RiotClient(\"your api key here\");\r\n//get challeger tier league for ranked solo 5x5\r\nvar challengers = riotClient.League.GetChallengerTierLeagues(RiotApiConfig.Regions.EUNE, Enums.GameQueueType.RANKED_SOLO_5x5);\r\n//get top 5 leaderboard using LINQ\r\nvar top5 = challengers.Entries.OrderByDescending(x => x.LeaguePoints).Take(5).ToList();\r\n//Print top 5 leaderboard\r\ntop5.ForEach(\r\ntopEntry =>\r\nConsole.WriteLine(\r\n$\"{topEntry.PlayerOrTeamName} - wins:{topEntry.Wins}  loss:{topEntry.Losses} points:{topEntry.LeaguePoints}\"));\r\n```\r\n\r\n```\r\nresponse =>\r\nFnatic Top - wins:303  loss:239 points:1269\r\nT5 yELLOW - wins:245  loss:157 points:1261\r\nKonektiv - wins:185  loss:114 points:1204\r\nDelitto123 - wins:193  loss:125 points:1185\r\nALBAN1AN god - wins:224  loss:158 points:1125\r\n```\r\n\r\nDownload the full api documentation reference [here (chm format)] (https://github.com/sdesyllas/RiotApi.NET/blob/master/Documentation/Help/Documentation.chm?raw=true)\r\n\r\nThe goal of this project is to provide .net application developers with a high level tool for Riot games' API \r\nto use in their apps. I hope you will like it! Please feel free to contribute.\r\n\r\n# Web UI\r\n[LoLUniverse](https://github.com/sdesyllas/LoLUniverse) is a separated project that utilize this API and provides a user interface and a prototype League of Legends web application. The project is build in ASP.NET MVC framework and you can find it [here](https://github.com/sdesyllas/LoLUniverse).\r\n\r\n# Third party libraries used\r\n* [SimpleJson by Prabir Shrestha](https://github.com/facebook-csharp-sdk/simple-json)\r\n* [LibLog by Damian Hickey](https://github.com/damianh/LibLog)\r\n* [Ninject](http://www.ninject.org/index.html)\r\n* [NUnit](http://www.nunit.org/)\r\n* [moq](https://github.com/Moq/moq4)\r\n\r\n## Also using\r\n* [Appveyor](http://www.appveyor.com/) for continuous integration and build server.\r\n* [waffle](project management solution ) for project management\r\n\r\n## License\r\nThis wrapper is under the [MIT license](LICENSE).\r\n\r\n## Disclaimer\r\nThis product is not endorsed, certified or otherwise approved in any way by Riot Games, Inc. or any of its affiliates.\r\n","google":"UA-2511207-9","note":"Don't delete this file! It's used internally to help with page regeneration."}